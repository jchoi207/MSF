# -*- coding: utf-8 -*-
"""basic_matplot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MP6x2gOAyYTX1zr2Zo8y-ruGFKxnFKlc
"""

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

from google.colab import files
uploaded = files.upload()

file_name = 'HistoricalData_1707693053191.csv'
df = pd.read_csv(file_name)

df

## df.shape() -> (rows, columns)
# print(df.shape)
m = df.shape[0]
n = df.shape[1]
print(m)
time = df['Date']
closing = df['Close/Last']

## accessing element e_mn
type(df['Close/Last'][0])
print(type(float('123.4')))


for i in range(m):
  #print((df['Close/Last'][i]))
  df['Close/Last'][i] = float((df['Close/Last'][i])[1:])
  #print(type(df['Close/Last'][i])) #= float((df['Close/Last'][i])[1:])
  df['Open'][i] = float((df['Open'][i])[1:])
  df['High'][i] = float((df['High'][i])[1:])
  df['Low'][i] = float((df['Low'][i])[1:])

df['Date'] = pd.to_datetime(df['Date'])



# type(df['Close/Last'][2])
# df['Close/Last'][2]



df['Date'] = pd.to_datetime(df['Date'])
df['Date'] = df['Date'].dt.strftime('%m/%d')

def plot_sma(x, y, n, m, col):
  y_sma = []
  for i in range(m-n-1):
     y_sma.append(sum(y[i:i+n])/n)
  axs[1].plot(x[:len(y_sma)], y_sma, col + '--')
  axs[1].legend(str(n))

# times = np.arange(22)
# plt.scatter(times, closing) # scatter plot for the poinst

fig, axs = plt.subplots(2)



fig.set_figheight(10)
fig.set_figwidth(10)

times = df['Date']

is_inc = [closing[i] <= closing[i+1] for i in range(m-1)]
print(is_inc)

for i in range(m-1):
  x = [times[i][:5], times[i+1][:5]]
  y = [closing[i], closing[i+1]]
  if y[0] - y[1] < 0: # inc
    axs[0].plot(x, y, 'g-')
  else:
    axs[0].plot(x, y, 'r-')

plot_sma(times, closing, 30, m, 'C9')
plot_sma(times, closing, 20, m, 'C4')
plot_sma(times, closing, 10, m, 'C0')
plot_sma(times, closing, 5, m, 'C1')

fig.tight_layout(pad=5.0)

for ax in axs.flat:
  ax.set_xticks(times[::15])
  ax.set(xlabel = 'Date', ylabel = "Close (USD)")
  ax.grid()

axs[0].set_title("Tesla Closes 2024" )
axs[1].set_title("Tesla Closes 2024, SMA")
plt.show()

"""Candle Plot"""

## structure
# Green: high, close, open, low
# Red: high, open, close, low

# parsing the data


# for i in range(m):
#   df['Open'] = float((df['Open'][i])[1:])


# print(type(df['Open'][1]))
# print(df['Open'][1])

# print(type(df['High'][1]))
# print(df['High'][1])

open = df['Open']
close = df['Close/Last']
high = df['High']
low = df['Low']

fig, ax = plt.subplots()

for i in range(m):
  if close[i] > open[i]: # green inc
    ax.bar(x = times[i], height = close[i] - open[i], width = 1, bottom = close[i], yerr = ([open[i] - low[i]], [high[i] - close[i]]), color = 'g' )
  else: # red dec
    ax.bar(x = times[i], height = abs(close[i] - open[i]), width = 1, bottom = open[i], yerr = ([abs(open[i] - low[i])], [abs(high[i] - close[i])]), color = 'r' )

ax.set_title('Tesla Candlestick Diagram')
ax.set_xticks(times[::15])
ax.set(xlabel = 'Date', ylabel = "Close (USD)")
ax.grid()

